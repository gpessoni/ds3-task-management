generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Priority {
  id        Int       @id @default(autoincrement())
  level     String    @unique
  default   Boolean   @default(false)
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model User {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  tasks          Task[]    @relation("CreatorTasks")
  responsibleFor Task[]    @relation("ResponsibleTasks")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Comment        Comment[]
}

model Task {
  id            Int       @id @default(autoincrement())
  title         String
  description   String?
  priorityId    Int
  priority      Priority  @relation(fields: [priorityId], references: [id])
  creatorId     Int
  creator       User      @relation("CreatorTasks", fields: [creatorId], references: [id])
  responsibleId Int
  responsible   User      @relation("ResponsibleTasks", fields: [responsibleId], references: [id])
  completed     Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  Tag           Tag[]
  Comment       Comment[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  color     String
  tasks     Task[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  taskId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
